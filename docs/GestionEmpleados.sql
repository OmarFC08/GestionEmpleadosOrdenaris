DROP TABLE GEMPLEADOS;
DROP TABLE GDIRECCION;

CREATE TABLE GEMPLEADOS(
CLAVE_EMPLEADO    VARCHAR2(12),
NOMBRES           VARCHAR2(100) NOT NULL,
APELLIDOS         VARCHAR2(100) NOT NULL,
CURP              VARCHAR2(18) NOT NULL UNIQUE,
PUESTO            VARCHAR2(50),
ID_JEFE           VARCHAR2(12),
CONSTRAINT PK_EMPLEADO PRIMARY KEY (CLAVE_EMPLEADO),
CONSTRAINT FK_EMPLEADO_JEFE FOREIGN KEY (ID_JEFE) REFERENCES GEMPLEADOS(CLAVE_EMPLEADO));

CREATE TABLE GDIRECCION(
ID_DIRECCION      NUMBER(10) NOT NULL,
CLAVE_EMPLEADO    VARCHAR2(12) NOT NULL,
CALLE             VARCHAR2(100) NOT NULL,
NO_EXTERIOR       VARCHAR2(10) NOT NULL,
NO_INTERIOR       VARCHAR2(10),
COLONIA           VARCHAR2(50) NOT NULL,
MUNICIPIO         VARCHAR2(50) NOT NULL,
ESTADO            VARCHAR2(50) NOT NULL,
PAIS              VARCHAR2(50) NOT NULL,
CONSTRAINT PK_DIR_EMP PRIMARY KEY (ID_DIRECCION),
CONSTRAINT FK_DIR_EMP FOREIGN KEY (CLAVE_EMPLEADO) REFERENCES GEMPLEADOS(CLAVE_EMPLEADO) ON DELETE CASCADE); --ON DELETE CASCADE ASEGURA QUE SI UN EMPLEADO ES ELIMINADO TAMBIEN LO SERA SU DIRECCION

CREATE SEQUENCE SEQ_GDIRECCION START WITH 1 INCREMENT BY 1 NOCACHE NOCYCLE; -- SECUENCIA PRAR ID DE LAUTOR
CREATE OR REPLACE TRIGGER TRG_ID_GDIRECCION
BEFORE INSERT ON GDIRECCION --SE EJECUTA ANTES DE HACER UN INSERT A LA TABLA AUTOR
FOR EACH ROW --PARA QUE EL TRIGGER ACTUE EN CADA FILA DE LA TABLA
BEGIN --INICIA LO QUE HARA EL BLOQUE PL/SQL
  IF :NEW.ID_DIRECCION IS NULL THEN --PREGUNTAMOS SI EL IDE QUE DEL INSERT ES NULL PARA INGRESAR A LA SIGUIENTE LINEA
    SELECT SEQ_GDIRECCION.NEXTVAL INTO :NEW.ID_DIRECCION FROM DUAL;
  END IF;
END;
/

COMMIT;
